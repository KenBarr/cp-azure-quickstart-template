{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine hosting the cp-all-in-one instance. Do not use special characters."
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "securityGroupName": {
      "type": "string",
      "defaultValue": "cp-all-in-one-security",
      "metadata": {
        "description": "Security group defined to support cp-all-in-one."
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional: Unique OMS Workspace Name for Log Analytics. Leave this field empty to not deploy an OMS Workspace."
      }
    },
    "workspaceRegion": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "OMS Workspace Region for Log Analytics. Not used if Workspace Name is empty."
      },
      "allowedValues": [
        "East US",
        "West Europe",
        "Southeast Asia",
        "Australia Southeast",
        "Japan East",
        "UK South",
        "Central India",
        "Canada Central"
      ]
    },
    "dnsLabelForVmIp": {
      "type": "string",
      "defaultValue": "[concat('vm', uniqueString(resourceGroup().id, deployment().name))]",
      "metadata": {
        "description": "Unique DNS Label for the Public IP used to access the Virtual Machine. Do not use '-'. Default will generate a unique string."
      }
    },
    "centosVersion": {
      "type": "string",
      "defaultValue": "7.4",
      "metadata": {
        "description": "The CentOS version for deploying the Docker containers. This will pick a fully patched image of this given CentOS version. Allowed values: 7.2, 7.3, 7.4"
      },
      "allowedValues": [
        "7.2",
        "7.3",
        "7.4"
      ]
    },
    "cp-all-in-oneVmSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "metadata": {
        "description": "The size of the Solace Message Routing Node VM. Requires at least 2 cores and 4GB of memory. Allowed values: D3_v2, DS3_v2, D3_v3, D3s_v3"
      },
      "allowedValues": [
        "Standard_D3_v2",
        "Standard_D3_v3",
        "Standard_D4_v3",
        "Standard_DS3_v2",
        "Standard_D3s_v3"
      ]
    },
    "diskSize": {
      "type": "string",
      "defaultValue": "20",
      "metadata": {
        "description": "The size of the data disk in GB for event retension. Allowed values: 20, 40, 80, 160"
      },
      "allowedValues": [
        "20",
        "40",
        "80",
        "160"
      ]
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional: Only used if deploying into an existing virtual network and subnet. Specify the Existing Virtual Network Name together with the Existing Subnet Name, otherwise leave it at default blank."
      }
    },
    "existingSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional: Only used if deploying into an existing virtual network and subnet. Specify the Existing Virtual Network Name together with the Existing Subnet Name, otherwise leave it at default blank."
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The virtual network's address range in CIDR notation where the PubSub+ event broker will be deployed."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "The subnet's address range in CIDR notation where the PubSub+ event broker will be deployed. It must be contained by the address space of the virtual network. The address range of a subnet which is in use can't be edited."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources. Default will use the same location as the Resource Group."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located."
      },
      "defaultValue": "https://raw.githubusercontent.com/SolaceProducts/solace-azure-quickstart-template/master/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Optional: The Shared Access Signatures (SAS) token if required for the artifacts location, otherwise leave it at default blank."
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "imagePublisher": "OpenLogic",
    "imageOffer": "Centos",
    "nestedTemplatesLocation": "nestedtemplates/",
    "solaceSecurityName": "SolaceSecurity.Template",
    "securitySharedTemplateName": "security-shared-resources.json",
    "securitySharedTemplateUri": "[uri(parameters('_artifactsLocation'), concat(variables('nestedTemplatesLocation'), variables('securitySharedTemplateName'), parameters('_artifactsLocationSasToken')))]",
    "solaceUpdateSubnetName": "SolaceUpdateSubnet.Template",
    "updateSubnetSharedTemplateName": "update-subnet-shared-resources.json",
    "updateSubnetSharedTemplateUri": "[uri(parameters('_artifactsLocation'), concat(variables('nestedTemplatesLocation'), variables('updateSubnetSharedTemplateName'), parameters('_artifactsLocationSasToken')))]",
    "solaceWorkspaceName": "SolaceWorkspace.Template",
    "workspaceEnabledSharedTemplateName": "workspace-enabled-shared-resources.json",
    "workspaceEnabledSharedTemplateUri": "[uri(parameters('_artifactsLocation'), concat(variables('nestedTemplatesLocation'), variables('workspaceEnabledSharedTemplateName'), parameters('_artifactsLocationSasToken')))]",
    "scriptsLocation": "scripts/",
    "cp-all-in-oneInstallScriptName": "deploy_cp-all-in-one.sh",
    "cp-all-in-oneInstallScriptFileUri": "[uri(parameters('_artifactsLocation'), concat(variables('scriptsLocation'), variables('cp-all-in-oneInstallScriptName'), parameters('_artifactsLocationSasToken')))]",
    "publicIPAddressName": "myPublicIPD",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[if(not(empty(parameters('existingVirtualNetworkName'))), parameters('existingVirtualNetworkName'), 'solace-vnet')]",
    "subnetName": "[if(not(empty(parameters('existingSubnetName'))), parameters('existingSubnetName'), 'solace-subnet')]",
    "nicName": "nicd",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "2019-10-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('solaceSecurityName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('securitySharedTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "securityGroupName": {
            "value": "[parameters('securityGroupName')]"
          },
          "subnetPrefix": {
            "value": "[parameters('subnetPrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "condition": "[not(empty(parameters('workspaceName')))]",
      "apiVersion": "2019-10-01",
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('solaceWorkspaceName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('workspaceEnabledSharedTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[parameters('workspaceName')]"
          },
          "workspaceRegion": {
            "value": "[parameters('workspaceRegion')]"
          }
        }
      }
    },
    {
      "apiVersion": "2020-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "interfaceLoop",
        "count": 1
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsLabelForVmIp'), copyindex())]"
        }
      }
    },
    {
      "condition": "[empty(parameters('existingSubnetName'))]",
      "apiVersion": "2020-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-10-01",
      "name": "[variables('solaceUpdateSubnetName')]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('solaceSecurityName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('updateSubnetSharedTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "subnetName": {
            "value": "[variables('subnetName')]"
          },
          "subnetAddressPrefix": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName')), '2018-03-01').addressPrefix]"
          },
          "nsgId": {
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('securityGroupName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "apiVersion": "2020-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicLoop",
        "count": 1
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyindex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('securityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyindex()))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion":"2019-07-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('dnsLabelForVmIp'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": 1
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), copyindex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('cp-all-in-oneVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('dnsLabelForVmIp'), copyindex())]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('centosVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('dnsLabelForVmIp'), copyindex(), '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": "[int(parameters('diskSize'))]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2019-12-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('dnsLabelForVmIp'), copyindex(), '/DockerExtension')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "DockerLoop",
        "count": 1
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelForVmIp'), copyindex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {}
      }
    },
    {
      "condition": "[not(empty(parameters('workspaceName')))]",
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('dnsLabelForVmIp'), copyindex(), '/OmsAgentExtension')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "OmsAgentLoop",
        "count": 1
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelForVmIp'), copyindex(), '/extensions/DockerExtension')]",
        "[concat('Microsoft.Resources/deployments/', variables('solaceWorkspaceName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
        "type": "OmsAgentForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "workspaceId": "[if(empty(parameters('workspaceName')),  '', reference(variables('solaceWorkspaceName')).outputs.workspaceId.value)]"
        },
        "protectedSettings": {
          "workspaceKey": "[if(empty(parameters('workspaceName')),  '', reference(variables('solaceWorkspaceName')).outputs.workspaceKey.value)]"
        }
      }
    },
    {
      "apiVersion": "2019-12-01",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('dnsLabelForVmIp'), copyindex(), '/configureKafkaContainer')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "SolaceLoop",
        "count": 1
      },
      "dependsOn": [
        "[if(empty(parameters('workspaceName')), concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelForVmIp'), copyindex(), '/extensions/DockerExtension'), concat('Microsoft.Compute/virtualMachines/', parameters('dnsLabelForVmIp'), copyindex(), '/extensions/OmsAgentExtension'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('cp-all-in-oneInstallScriptFileUri')]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat('bash ', variables('cp-all-in-oneInstallScriptName'), ' -c ', copyindex(), ' -d ', parameters('dnsLabelForVmIp'), ' -u ', parameters('vmAdminUsername'), if(empty(parameters('workspaceName')), '', concat(' -w ', reference(variables('solaceWorkspaceName')).outputs.workspaceId.value)))]"
         }
      }
    }
  ]
}
